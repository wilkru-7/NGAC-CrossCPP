set to Policy (a)
{
  "respStatus":"success",
  "respMessage":"policy set",
  "respBody":"Policy (a)"
}
get the policy
{
  "respStatus":"success",
  "respMessage":"current policy",
  "respBody":"Policy (a)"
}
run first four test cases for Policy (a), expect grant grant grant deny
{"respStatus":"success", "respMessage":"grant", "respBody":"u1,r,o1"}
{"respStatus":"success", "respMessage":"grant", "respBody":"u1,w,o1"}
{"respStatus":"success", "respMessage":"grant", "respBody":"u1,r,o2"}
{"respStatus":"success", "respMessage":"deny", "respBody":"u1,w,o2"}
set to Policy (b)
{
  "respStatus":"success",
  "respMessage":"policy set",
  "respBody":"Policy (b)"
}
get the policy
{
  "respStatus":"success",
  "respMessage":"current policy",
  "respBody":"Policy (b)"
}
run first four test cases for Policy (b), expect deny deny grant grant
{"respStatus":"success", "respMessage":"deny", "respBody":"u1,r,o1"}
{"respStatus":"success", "respMessage":"deny", "respBody":"u1,w,o1"}
{"respStatus":"success", "respMessage":"grant", "respBody":"u1,r,o2"}
{"respStatus":"success", "respMessage":"grant", "respBody":"u1,w,o2"}
end of curl tests
